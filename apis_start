// //dynamic post
// app.post("/signup",async(req,res)=>{
//     console.log(req.body);
   
//     try{
//     //validation of data
//      validateSignUpData(req);
//      const { firstName, lastName, emailId, password } = req.body;
//     //  const {password}=req.body;
//     //Encrypt the password
//       const passwordHash=await bcrypt.hash(password,10);
//       console.log(passwordHash);

//      const user=new User({
//         firstName,
//         lastName,
//         emailId,
//         password:passwordHash,
//      });
//     await user.save();
//     res.send("User added successfully");
//     }
//     catch(err){
//         res.status(400).send("ERROR: " + err.message);
//     }
// })

// //login
// app.post("/login",async(req,res)=>{
//     try{
//         const{ emailId,password }=req.body;

//         const user=await User.findOne({emailId:emailId});        
//         if(!user){
//             throw new Error("Invalid Credentials");
//         }
//         // const isPasswordValid=await bcrypt.compare(password,user.password);
//         const isPasswordValid=await user.validatePassword(password);
//         if(isPasswordValid){
//             //Create a JWT token
//              const token=await user.getJWT();
//             res.cookie("token",token,{expires:new Date(Date.now()+900000),httpOnly:true});
//             res.send("Login Successfully!!!");
//         }
//         else{
//             throw new Error("Invalid Credentials");
//         }
//     }
//     catch(err){
//         res.status(400).send("ERROR: "+err.message);
//     }
// });

// app.get("/profile",userAuth,async(req,res)=>{
//     try{
//      const user=req.user;
//     res.send(user);
//     console.log(cookies);
//     res.send("reading cookie");
//     }
//     catch(err){
//         res.status(400).send("ERROR: "+err.message);
//     }
// })

// app.post("/sendConnectionRequest",userAuth,async(req,res)=>{
//     const user=req.user;
//     console.log(user);
//     console.log("sending a connection request");
//     res.send(user.firstName+" sent the connection request!") ;
// })
// //user by email
// app.get("/user",async(req,res)=>{
//     const userEmail=req.body.emailId;
//     try{
//         const users=await User.find({emailId:userEmail});
//         if(users.length===0){
//             res.status(404).send("User not found");
//         }
//         else{
//             res.send(users);
//         }
//     }
//     catch(err){
//         res.status(400).send("something went wrong");
//     }
// });

// app.get("/feed",async(req,res)=>{
//     try{
//         const users=await User.find({});
//         res.send(users); 
//     }
//     catch(err){
//         res.status(400).send("error");
//     }
// })

// app.delete("/user",async(req,res)=>{
//     const userId=req.body.userId;
//     try{
//         const user= await User.findByIdAndDelete(userId);
//         res.send("user deleted successfully");
//     }
//     catch(err){
//         res.status(400).send("Something went wrong");
//     }
// });
// app.patch("/user/:userId", async (req, res) => {
//     const userId = req.params?.userId;
//     const data = req.body;

//     try {
//         const ALLOWED_FIELD = ["photoUrl", "about", "gender", "age", "skills"];

//         // Ensure every key in the data object is in the ALLOWED_FIELD array
//         const isUpdateAllowed = Object.keys(data).every((k) => {
//             return ALLOWED_FIELD.includes(k); // Add 'return' here
//         });

//         if (!isUpdateAllowed) {
//             throw new Error("Update not allowed");
//         }

//         if(data?.skills.length>10){
//             throw new Error("skills cannot be more than 10");
//         }

//         await User.findByIdAndUpdate({ _id: userId }, data, {
//             runValidators: true,
//         });

//         console.log(data);
//         res.send("User updated successfully");
//     } catch (err) {
//         res.status(400).send("Update failed: " + err.message);
//     }
// });
